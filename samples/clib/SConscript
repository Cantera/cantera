from os.path import join as pjoin, relpath
from buildutils import *

Import('env', 'install', 'buildSample')
localenv = env.Clone()

# (program name, [source files])
samples = [('demo', ['demo.c'])]

for programName, sources in samples:
    buildSample(localenv.Program, programName, sources,
                CPPPATH=['#include'],
                LIBS=env['cantera_shared_libs'],
                LIBPATH=env['extra_lib_dirs'] + ['#build/lib'])

    # Generate SConstruct files to be installed
    incdirs = [localenv["ct_incroot"]]
    libdirs = [localenv["ct_libdir"]]
    if not localenv["package_build"]:
        incdirs.extend([localenv["sundials_include"], localenv["boost_inc_dir"]])
        incdirs.append(localenv["hdf_include"])
        incdirs.extend(localenv["extra_inc_dirs"])
        incdirs = list(set(incdirs))
        libdirs.extend([localenv["sundials_libdir"], localenv["blas_lapack_dir"]])
        libdirs.append(localenv["hdf_libdir"])
        libdirs.extend(localenv["extra_lib_dirs"])
        libdirs = list(set(libdirs))

    libs = localenv['cantera_shared_libs']
    linkflags = ("-g", localenv["thread_flags"], f"-Wl,-rpath,{localenv['ct_libdir']}")
    cc_flags = localenv["CCFLAGS"]

    localenv["tmpl_compiler_flags"] = repr(cc_flags)
    localenv['tmpl_cantera_incdirs'] = repr([x for x in incdirs if x])
    localenv['tmpl_cantera_libs'] = repr(libs)
    localenv['tmpl_cantera_libdirs'] = repr([x for x in libdirs if x])
    localenv['tmpl_cantera_linkflags'] = repr([x for x in linkflags if x])
    localenv['tmpl_cantera_frameworks'] = repr(localenv['FRAMEWORKS'])

    localenv['tmpl_progname'] = programName
    localenv['tmpl_sourcename'] = programName + '.c'

    sconstruct = localenv.SubstFile('SConstruct', 'SConstruct.in')
    install("$inst_sampledir/clib", sconstruct)

    # Generate CMakeLists.txt to be installed
    localenv['cmake_cantera_incdirs'] = ' '.join(quoted(x) for x in incdirs if x)
    localenv['cmake_cantera_libs'] = ' '.join(libs)
    localenv['cmake_cantera_libdirs'] = ' '.join(quoted(x) for x in libdirs if x)
    cmakelists = localenv.SubstFile('CMakeLists.txt', 'CMakeLists.txt.in')
    install("$inst_sampledir/clib", cmakelists)

    if localenv["OS"] != "Windows":
        # Generate Makefile to be installed
        mak_path = pjoin(localenv["ct_incroot"], "cantera", "Cantera.mak")
        localenv["mak_compiler_flags"] = " ".join(cc_flags)
        if " " in mak_path:
            # There is no reasonable way to handle spaces in Makefile 'include'
            # statement, so we fall back to using the relative path instead
            mak_path = relpath(mak_path, pjoin(localenv["ct_sampledir"], "clib"))
        localenv["make_Cantera_dot_mak"] = mak_path

        localenv["make_target"] = programName
        localenv["make_sourcefile"] = programName + ".c"
        makefile = localenv.SubstFile("Makefile", "Makefile.in")
        install("$inst_sampledir/clib", makefile)
