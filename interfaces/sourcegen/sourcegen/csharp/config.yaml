# How ignore works:
# Put the name of a C header file with
#   - an empty list to ignore the entire file
#   - a list of function names to include the file but ignore those functions
ignore:
    clib_defs.h: []
    ct.h:
        - ct_setLogWriter
    ctfunc.h: []
    ctmatlab.h: []
    ctonedim.h: []
    ctreactor.h:
        - flowReactor_setMassFlowRate
    ctrpath.h: []

# replaces the name as determined by the C function prefix
# with the name of the class that function is designed to expose
handle_crosswalk:
    flowdev: FlowDevice
    kin: Kinetics
    mix: Mixture
    reactor: Reactor
    reactornet: ReactorNet
    reactorsurface: ReactorSurface
    surf: Surface
    thermo: ThermoPhase
    trans: Transport
    wall: Wall

# Handles for which there is no special delete function,
# so we need to generate them manually because we can't
# discover the type name from the delete.
# Declare these as
#  Derived: Base
derived_handles:
    SurfaceHandle: ThermoPhaseHandle

# Provides info for scafolding higher-level idiomatic C# classes
# At this stage, we can scaffold simple properties that follow the
# naming conventions _prop, _setProp for scalars and
# _getProp, _setProp for array-likes (string, double[]).
# The C# class name will be determine by the handle crosswalk above.
# The C# property names are the values for the CLib "property" keys.
classes:
    thermo:
    # scalars
        density: Density
        electricPotential: ElectricPotential
        meanMolecularWeight: MeanMolecularWeight
        molarDensity: MolarDensity
        pressure: Pressure
        temperature: Temperature
        enthalpy_mass: MassEnthalpy
        enthalpy_mole: MoleEnthalpy
        entropy_mass: MassEntropy
        entropy_mole: MoleEntropy
        cp_mole: MoleCp
        cv_mole: MoleCv
        cp_mass: MassCp
        cv_mass: MassCv
    # strings
        name : Name
