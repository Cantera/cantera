# This file is part of Cantera. See License.txt in the top-level directory or
# at https://cantera.org/license.txt for license and copyright information.

docstring: |-
  Generated CLib API for Cantera's Kinetics class.
prefix: kin
base: Kinetics
parents: []  # List of parent classes
derived: {InterfaceKinetics: kin}  # Specialization/prefix dictionary
recipes:
- name: kineticsType  # Renamed in Cantera 3.2 (previously getType)
- name: nReactions
- name: reaction  # New in Cantera 3.2
  uses: nReactions
  what: accessor
- name: nPhases
- name: phase
  uses: nPhases
  what: accessor
- name: reactionPhase  # New in Cantera 3.2
  what: accessor
- name: phaseIndex
  # temporary custom code due to changing C++ API: replaceable by
  # wraps: phaseIndex(const string&)
  # with implicit `raise=true` default after Cantera 3.2
  brief: Return the phase index of a phase in the list of phases defined within the object.
  what: method
  declaration: int32_t kin_phaseIndex(int32_t handle, const char* ph);
  parameters:
    handle: Handle to queried Kinetics object.
    ph: string name of the phase
  uses: phaseIndex(const string&, bool)
  code: |-
    return KineticsCabinet::at(handle)->phaseIndex(ph, true);
- name: nTotalSpecies  # Renamed in Cantera 3.2 (previously nSpecies)
- name: reactantStoichCoeff
- name: productStoichCoeff
- name: getFwdRatesOfProgress
- name: getRevRatesOfProgress
- name: getNetRatesOfProgress
- name: getEquilibriumConstants
- name: getFwdRateConstants
- name: getRevRateConstants
- name: getCreationRates
- name: getDestructionRates
- name: getNetProductionRates
- name: multiplier
- name: setMultiplier
- name: isReversible
- name: kineticsSpeciesIndex  # Renamed in Cantera 3.2 (previously speciesIndex)
  # temporary custom code due to changing C++ API: replaceable by
  # wraps: kineticsSpeciesIndex(const string&)
  # with implicit `raise=true` default after Cantera 3.2
  brief: Return the index of a species within the phases participating in this kinetic mechanism.
  what: method
  declaration: int32_t kin_kineticsSpeciesIndex(int32_t handle, const char* nm);
  parameters:
    handle: Handle to queried Kinetics object.
    nm: name of the species
  uses: kineticsSpeciesIndex(const string&, bool)
  code: |-
    return KineticsCabinet::at(handle)->kineticsSpeciesIndex(nm, true);
- name: advanceCoverages
  wraps: advanceCoverages(double)
- name: getDeltaEnthalpy  # Changed in Cantera 3.2 (previously part of getDelta)
- name: getDeltaGibbs  # Changed in Cantera 3.2 (previously part of getDelta)
- name: getDeltaEntropy  # Changed in Cantera 3.2 (previously part of getDelta)
- name: getDeltaSSEnthalpy  # Changed in Cantera 3.2 (previously part of getDelta)
- name: getDeltaSSGibbs  # Changed in Cantera 3.2 (previously part of getDelta)
- name: getDeltaSSEntropy  # Changed in Cantera 3.2 (previously part of getDelta)
# - name: start  # <--- unused except for FORTRAN API
# service functions
- name: del
- name: cabinetSize
