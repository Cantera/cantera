name: CI

on:
  push:
    # Build on tags that look like releases
    tags:
      - v*
    # Build when main or testing is pushed to
    branches:
      - main
      - testing
  pull_request:
    # Build when a pull request targets main
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  windows-2022:
    name: ${{ matrix.os }}, MSVC ${{ matrix.vs-toolset }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        os: ["windows-2022"]
        vs-toolset: ["14.1", "14.2", "14.3"] # 'cl' is not recognized for earlier toolsets
        python-version: [ "3.7", "3.9", "3.10" ]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
      name: Checkout the repository
      with:
        submodules: recursive
    - name: Set up conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        mamba-version: "*"
        activate-environment: test
        channels: conda-forge,defaults
        channel-priority: true
    - name: Install conda dependencies
      # See https://github.com/conda-forge/boost-cpp-feedstock/issues/41 for why we
      # use boost-cpp rather than boost from conda-forge
      # Install SCons >=4.4.0 to make sure that MSVC_TOOLSET_VERSION variable is present
      run: |
        mamba install -q '"scons<4.4.0"' numpy cython ruamel.yaml boost-cpp eigen yaml-cpp h5py pandas pytest
      shell: pwsh
    - name: Install typing_extensions for Python 3.7
      if: matrix.python-version == '3.7'
      run: mamba install -q typing_extensions
    - name: Build Cantera
      run: scons build system_eigen=y system_yamlcpp=y logging=debug
        msvc_toolset_version=${{ matrix.vs-toolset }} msvc_version=14.3 f90_interface=n debug=n --debug=time -j2
      shell: pwsh
    - name: Test Cantera
      run: scons test show_long_tests=yes verbose_tests=yes --debug=time
      shell: pwsh
    - name: Test Install
      # spot-check installation locations
      run: |
        scons install
        test -f ${CONDA_PREFIX}/Library/lib/cantera_shared.dll
        test -f ${CONDA_PREFIX}/Library/include/cantera/base/Solution.h
        test -f ${CONDA_PREFIX}/Scripts/ck2yaml
        test -f ${CONDA_PREFIX}/share/cantera/data/gri30.yaml
        test -d ${CONDA_PREFIX}/share/cantera/samples
        test -d ${CONDA_PREFIX}/share/cantera/samples/python
        test -d ${CONDA_PREFIX}/Lib/site-packages/cantera
    - name: Test Essentials
      # ensure that Python package loads and converter scripts work
      run: |
        python -c 'import cantera as ct; import sys; sys.exit(0) if ct.__version__.startswith("3.0.0") else sys.exit(1)'
        ck2yaml --input=test/data/h2o2.inp --output=h2o2-test.yaml
        test -f h2o2-test.yaml
        cti2yaml test/data/ch4_ion.cti ch4_ion-test.yaml
        test -f ch4_ion-test.yaml
        yaml2ck data/h2o2.yaml --mechanism=h2o2-test.ck
        test -f h2o2-test.ck
